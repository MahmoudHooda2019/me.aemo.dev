/* ==========================================================================
   Error Handler Styles
   Provides styling for error notifications and user feedback
   ========================================================================== */

.error-container {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 9999;
    max-width: 400px;
    pointer-events: none;
}

.error-message {
    background: var(--card-background);
    border-left: 4px solid var(--error-color);
    border-radius: 8px;
    margin-bottom: 12px;
    box-shadow: 0 4px 12px var(--shadow-color);
    opacity: 0;
    transform: translateX(100%);
    transition: all var(--transition-normal);
    pointer-events: auto;
    max-width: 100%;
    word-wrap: break-word;
}

.error-message.error-visible {
    opacity: 1;
    transform: translateX(0);
}

.error-message.error-removing {
    opacity: 0;
    transform: translateX(100%);
    margin-bottom: 0;
    max-height: 0;
    padding: 0;
    overflow: hidden;
}

.error-content {
    display: flex;
    align-items: flex-start;
    padding: 16px;
    gap: 12px;
}

.error-icon {
    font-size: 20px;
    flex-shrink: 0;
    margin-top: 2px;
}

.error-text {
    flex: 1;
    color: var(--text-color);
    font-size: 14px;
    line-height: 1.4;
    margin: 0;
}

.error-close {
    background: none;
    border: none;
    color: var(--text-color-light);
    font-size: 18px;
    cursor: pointer;
    padding: 0;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    transition: var(--transition-fast);
    flex-shrink: 0;
}

.error-close:hover,
.error-close:focus {
    background: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
}

.error-close:focus {
    outline: 2px solid var(--focus-color);
    outline-offset: 2px;
}

/* Error severity styles */
.error-low {
    border-left-color: var(--info-color);
}

.error-medium {
    border-left-color: var(--warning-color);
}

.error-high {
    border-left-color: var(--error-color);
}

.error-critical {
    border-left-color: var(--error-color);
    background: rgba(207, 102, 121, 0.1);
    animation: pulse-error 2s infinite;
}

@keyframes pulse-error {
    0%, 100% {
        box-shadow: 0 4px 12px var(--shadow-color);
    }
    50% {
        box-shadow: 0 4px 12px var(--shadow-color), 0 0 20px rgba(207, 102, 121, 0.3);
    }
}

/* Responsive design */
@media (max-width: 768px) {
    .error-container {
        top: 10px;
        right: 10px;
        left: 10px;
        max-width: none;
    }
    
    .error-content {
        padding: 12px;
        gap: 8px;
    }
    
    .error-text {
        font-size: 13px;
    }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    .error-message {
        border-width: 2px;
        border-style: solid;
    }
    
    .error-low {
        border-color: var(--info-color);
    }
    
    .error-medium {
        border-color: var(--warning-color);
    }
    
    .error-high,
    .error-critical {
        border-color: var(--error-color);
    }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
    .error-message {
        transition: opacity var(--transition-fast);
        transform: none;
    }
    
    .error-message.error-visible {
        transform: none;
    }
    
    .error-message.error-removing {
        transform: none;
    }
    
    .error-critical {
        animation: none;
    }
}
